@startuml
'https://plantuml.com/class-diagram
'https://plantuml.com/commons

Game -- Board
Game "1" -- "2..4" Player
Board - Player
Board -left UsableCells
Player "1" - "1" Bookshelf
Player "1" -- "1" PersonalGoal
Player "1" -- "1..2" CommonGoal
note on link
    Player's reference to the common goals is static.
end note
CommonGoal "1" -- "1" Layout
Item -- Color
Board "1" o-- "81" Item
Bookshelf "1" o-- "0..30" Item

class Game {
    -List<CommonGoal> commonGoalDeck
    -List<PersonalGoal> personalGoalDeck
    -Player currentPlayer
    ----
    +initialize()
    +refill()
    +drawPersonalGoals()
    +move(Player player, Coordinates from, Coordinates to)
    .. Getters ..
    +getCurrentPlayer()
    +getPlayers()
}

note right : This is the controller.

class Item {
    -Color color
    -int number
    -- Getters --
    +getColor()
    +getNumber()
    .. Constructors ..
    +Item(Color color, int number)
}

class Player {
    -String nickname
    -int age
    -boolean hasEndGameCard
    -boolean isFirstGame
    -boolean isFirstPlayer
    -boolean commonGoalReached[]
    ----
    +calculateScore()
    +rearrangePickedItems(List<Item> items)
    +move(Coordinates from, Coordinates to)
    .. Getters ..
    +getNickname()
    +getAge()
    +isFirstPlayer()
    .. Setters ..
    +setPersonalGoal(PersonalGoal personalGoal)
    .. Constructors ..
    +Player(String nickname, boolean isFirstGame)
    +Player(String nickname, boolean isFirstGame, boolean isFirstPlayer)
}

class Board {
    +pick()
    +fill()
    .. Getters ..
    +getItems()
    .. Constructors ..
    +Board(int numberOfPlayers)
}

interface AbleToGetPoints {
    +{abstract} getPoints()
}

class PersonalGoal implements AbleToGetPoints {
    -HashMap<Coordinates, Color> personalGoal
    -int currentlyReached
    .. Getters ..
    +getColor(Coordinates coordinates)
    +colorReached()
}

note left of PersonalGoal::reached
    It indicates the number of cells filled with the "right color"
end note

note right of PersonalGoal::goal
    The goal's configuration.
end note

class CommonGoal implements AbleToGetPoints {
    -List<Integer> scoringList
    ----
    +assignScore(Player player)
    .. Getters ..
    +getScoringList()
    +getScoring()
    +getLayout()
    .. Constructors ..
    +CommonGoal(int numberOfPlayers, Layout pattern)
}

enum Color {
    GREEN
    WHITE
    YELLOW
    BLUE
    LIGHTBLUE
    PINK
    +getRandomColor()
}

class Bookshelf implements AbleToGetPoints {
    -int rows
    -int columns
    ----
    +insert(int column, List<Item> items)
    .. Getters ..
    +getRows()
    +getColumns()
    +getFreeCellsInColumn(int column)
    .. Constructors ..
    +Bookshelf()
}

abstract Layout {
    -int width
    -int height
    -int minDifferent
    -int maxDifferent
    -char direction
    ----
    +{abstract} check(Bookshelf b)
    +{abstract} getInfo()
    .. Constructors ..
    +Layout(int width, int height, int minDifferent, int maxDifferent, char direction)
}

note right of Layout::getCurrent
    Returns the number of items in the correct position for a specific common goal.
end note

class Rectangle extends Layout {
    -int occurrences
    ---
    +getCurrent(Bookshelf b)
    +Rectangle(int width, int height, int minDifferent, int maxDifferent, char direction, int occurrences)
}

class Diagonal extends Layout {
    -boolean doubleDiagonal
    ----

    +Diagonal(int width, int height, int minDifferent, int maxDifferent, char direction, boolean doubleDiagonal)
}

class Stairs extends Layout {

    +Stairs(int width, int height, int minDifferent, int maxDifferent)
}

class Corners extends Layout {
    +Corners()
}
@enduml
